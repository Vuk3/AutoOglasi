// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Models;

namespace Web_Projekat_18036.Migrations
{
    [DbContext(typeof(AutoOglasiContext))]
    partial class AutoOglasiContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.14")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Models.Automobil", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("brojSasije")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("godiste")
                        .HasColumnType("int");

                    b.Property<string>("gorivo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("karoserija")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("kilometraza")
                        .HasColumnType("int");

                    b.Property<int>("kubikaza")
                        .HasColumnType("int");

                    b.Property<string>("marka")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("model")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("pijacaLokacijaID")
                        .HasColumnType("int");

                    b.Property<int>("snagaMotora")
                        .HasColumnType("int");

                    b.Property<int?>("vlasnikAutomobilaID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("pijacaLokacijaID");

                    b.HasIndex("vlasnikAutomobilaID");

                    b.ToTable("Automobil");
                });

            modelBuilder.Entity("Models.Korisnik", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("JMBG")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.Property<string>("adresa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("grad")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("ime")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("prezime")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("sifra")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("slika")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("telefon")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Korisnik");
                });

            modelBuilder.Entity("Models.Oglas", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("automobilFK")
                        .HasColumnType("int");

                    b.Property<int?>("automobilID")
                        .HasColumnType("int");

                    b.Property<int>("cena")
                        .HasColumnType("int");

                    b.Property<string>("datumPostavljanja")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("pijacaID")
                        .HasColumnType("int");

                    b.Property<string>("sifraOglasa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("vlasnikOglasaID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("automobilID");

                    b.HasIndex("pijacaID");

                    b.HasIndex("vlasnikOglasaID");

                    b.ToTable("Oglas");
                });

            modelBuilder.Entity("Models.Pijaca", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("lokacija")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("naziv")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("telefon")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Pijaca");
                });

            modelBuilder.Entity("Models.Automobil", b =>
                {
                    b.HasOne("Models.Pijaca", "pijacaLokacija")
                        .WithMany("sviAutomobili")
                        .HasForeignKey("pijacaLokacijaID");

                    b.HasOne("Models.Korisnik", "vlasnikAutomobila")
                        .WithMany("svojiAutomobili")
                        .HasForeignKey("vlasnikAutomobilaID");

                    b.Navigation("pijacaLokacija");

                    b.Navigation("vlasnikAutomobila");
                });

            modelBuilder.Entity("Models.Oglas", b =>
                {
                    b.HasOne("Models.Automobil", "automobil")
                        .WithMany()
                        .HasForeignKey("automobilID");

                    b.HasOne("Models.Pijaca", "pijaca")
                        .WithMany("sviOglasi")
                        .HasForeignKey("pijacaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Models.Korisnik", "vlasnikOglasa")
                        .WithMany("svojiOglasi")
                        .HasForeignKey("vlasnikOglasaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("automobil");

                    b.Navigation("pijaca");

                    b.Navigation("vlasnikOglasa");
                });

            modelBuilder.Entity("Models.Korisnik", b =>
                {
                    b.Navigation("svojiAutomobili");

                    b.Navigation("svojiOglasi");
                });

            modelBuilder.Entity("Models.Pijaca", b =>
                {
                    b.Navigation("sviAutomobili");

                    b.Navigation("sviOglasi");
                });
#pragma warning restore 612, 618
        }
    }
}
